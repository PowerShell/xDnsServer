[ClassVersion("1.0.0.0"), FriendlyName("DnsServerSetting")]
class DSC_DnsServerSetting : OMI_BaseResource
{
    [Key, Description("Specifies the DNS server to connect to, or use 'localhost' for the current node.")] String DnsServer;
    [Write, Description("Maximum number of host records returned in response to an address request. Values between `5` and `28`, or `0` are valid.")] UInt32 AddressAnswerLimit;
    [Write, Description("Specifies whether the DNS Server accepts dynamic update requests.")] Boolean AllowUpdate;
    [Write, Description("Indicates whether the DNS Server attempts to update its cache entries using data from root servers.")] Boolean AutoCacheUpdate;
    [Write, Description("Indicates which standard primary zones that are authoritative for the name of the DNS Server must be updated when the name server changes.")] UInt32 AutoConfigFileZones;
    [Write, Description("Determines the AXFR message format when sending to non-Microsoft DNS Server secondaries.")] Boolean BindSecondaries;
    [Write, Description("Initialization method for the DNS Server.")] UInt32 BootMethod;
    [Write, Description("Indicates whether the DNS Server automatically creates standard reverse look up zones.")] Boolean DisableAutoReverseZone;
    [Write, Description("Specifies whether support for application directory partitions is enabled on the DNS Server.")] Boolean EnableDirectoryPartitions;
    [Write, Description("Specifies whether the DNS Server includes DNSSEC-specific RRs, KEY, SIG, and NXT in a response.")] Boolean EnableDnsSec;
    [Write, Description("Specifies whether queries to delegated sub-zones are forwarded.")] Boolean ForwardDelegations;
    [Write, Description("Enumerates the list of IP addresses on which the DNS Server can receive queries.")] String ListeningIPAddress[];
    [Write, Description("Indicates whether the DNS Server gives priority to the local net address when returning A records.")] Boolean LocalNetPriority;
    [Write, Description("Indicates whether the DNS Server performs loose wildcarding.")] Boolean LooseWildcarding;
    [Write, Description("Indicates the set of eligible characters to be used in DNS names.")] UInt32 NameCheckFlag;
    [Write, Description("Indicates whether the DNS Server round robins multiple A records.")] Boolean RoundRobin;
    [Write, Description("RPC protocol or protocols over which administrative RPC runs.")] UInt32 RpcProtocol;
    [Write, Description("Port on which the DNS Server sends UDP queries to other servers.")] UInt32 SendPort;
    [Write, Description("Indicates whether the DNS Server parses zone files strictly.")] Boolean StrictFileParsing;
    [Write, Description("Restricts the type of records that can be dynamically updated on the server, used in addition to the AllowUpdate settings on Server and Zone objects.")] UInt32 UpdateOptions;
    [Write, Description("Specifies whether the DNS Server writes NS and SOA records to the authority section on successful response.")] Boolean WriteAuthorityNS;
    [Write, Description("Time, in seconds, the DNS Server waits for a successful TCP connection to a remote server when attempting a zone transfer.")] UInt32 XfrConnectTimeout;
    [Write, Description("Not written yet.")] Boolean EnableIPv6;
    [Write, Description("Not written yet.")] Boolean EnableOnlineSigning;
    [Write, Description("Not written yet.")] Boolean EnableDuplicateQuerySuppression;
    [Write, Description("Not written yet.")] Boolean AllowCnameAtNs;
    [Write, Description("Not written yet.")] Boolean EnableRsoForRodc;
    [Write, Description("Not written yet.")] Boolean OpenAclOnProxyUpdates;
    [Write, Description("Not written yet.")] Boolean NoUpdateDelegations;
    [Write, Description("Not written yet.")] Boolean EnableUpdateForwarding;
    [Write, Description("Not written yet.")] Boolean EnableWinsR;
    [Write, Description("Not written yet.")] Boolean DeleteOutsideGlue;
    [Write, Description("Not written yet.")] Boolean AppendMsZoneTransferTag;
    [Write, Description("Not written yet.")] Boolean AllowReadOnlyZoneTransfer;
    [Write, Description("Not written yet.")] Boolean EnableSendErrorSuppression;
    [Write, Description("Not written yet.")] Boolean SilentlyIgnoreCnameUpdateConflicts;
    [Write, Description("Not written yet.")] Boolean EnableIQueryResponseGeneration;
    [Write, Description("Not written yet.")] Boolean AdminConfigured;
    [Write, Description("Not written yet.")] Boolean PublishAutoNet;
    [Write, Description("Not written yet.")] Boolean ReloadException;
    [Write, Description("Not written yet.")] Boolean IgnoreServerLevelPolicies;
    [Write, Description("Not written yet.")] Boolean IgnoreAllPolicies;
    [Write, Description("Not written yet.")] UInt32 EnableVersionQuery;
    [Write, Description("Not written yet.")] UInt32 AutoCreateDelegation;
    [Write, Description("Not written yet.")] UInt32 RemoteIPv4RankBoost;
    [Write, Description("Not written yet.")] UInt32 RemoteIPv6RankBoost;
    [Write, Description("Not written yet.")] UInt32 MaximumRodcRsoQueueLength;
    [Write, Description("Not written yet.")] UInt32 MaximumRodcRsoAttemptsPerCycle;
    [Write, Description("Not written yet.")] UInt32 MaxResourceRecordsInNonSecureUpdate;
    [Write, Description("Not written yet.")] UInt32 LocalNetPriorityMask;
    [Write, Description("Not written yet.")] UInt32 TcpReceivePacketSize;
    [Write, Description("Not written yet.")] UInt32 SelfTest;
    [Write, Description("Not written yet.")] UInt32 XfrThrottleMultiplier;
    [Write, Description("Not written yet.")] UInt32 SocketPoolSize;
    [Write, Description("Not written yet.")] UInt32 QuietRecvFaultInterval;
    [Write, Description("Not written yet.")] UInt32 QuietRecvLogInterval;
    [Write, Description("Not written yet.")] UInt32 SyncDsZoneSerial;
    [Write, Description("Not written yet.")] UInt32 ScopeOptionValue;
    [Write, Description("Not written yet.")] UInt32 VirtualizationInstanceOptionValue;
    [Write, Description("Not written yet.")] String ServerLevelPluginDll;
    [Write, Description("Not written yet.")] String RootTrustAnchorsURL;
    [Write, Description("Not written yet.")] String SocketPoolExcludedPortRanges[];
    [Write, Description("Not written yet.")] String LameDelegationTTL;
    [Write, Description("Not written yet.")] String MaximumSignatureScanPeriod;
    [Write, Description("Not written yet.")] String MaximumTrustAnchorActiveRefreshInterval;
    [Write, Description("Not written yet.")] String ZoneWritebackInterval;
    [Read, Description("Returns whether there is an available DS on the DNS Server.")] Boolean DsAvailable;
    [Read, Description("Returns the DNS Server major version.")] UInt32 MajorVersion;
    [Read, Description("Returns the DNS Server minor version.")] UInt32 MinorVersion;
    [Read, Description("Returns the DNS Server build number.")] UInt32 BuildNumber;
    [Read, Description("Returns whether DNS Server belongs to a read-only domain controller.")] Boolean IsReadOnlyDC;
    [Read, Description("Returns all IP addresses bind to network interfaces.")] String AllIPAddress[];
    [Read, Description("Returns the forest directory partition base name.")] String ForestDirectoryPartitionBaseName;
    [Read, Description("Returns the forest directory partition base name.")] String DomainDirectoryPartitionBaseName;
    [Read, Description("Returns the forest directory partition base name.")] UInt32 MaximumUdpPacketSize;
};
